#!/bin/bash

### Collection of helper scripts for git

gitmainbranch() {
	git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
}

gitbranch() {
	git rev-parse --symbolic-full-name --abbrev-ref HEAD
}

ghclone() { # <username> <reponame>
	git clone "git@github.com:$1/$2.git"
}

gitinit() { # <repo location> <initial commit message>
	local origin="$1"
	local message="${2:-Initial Commit}"
	
	git init
	git branch -M main
	git add -A
	git commit -am "$message"
	git remote add origin "$origin"
	git push -u origin main
}

gitpush() { # <commit message> [git push flags]
	local message="$1"
	
	git add -A
	git commit -am "$message"
	git push --set-upstream origin "$(gitbranch)" ${@:2}
}

gitrefresh() {
	git config pull.rebase true
	git pull
	git push
}

# append changes to the latest commit
gitappend() {
	git add -A
	git commit --amend --no-edit
}

gitreset() { # <project upstream branch>
	local rev=${1:-"upstream/master"}
	local origin=$(echo "$rev" | cut -d '/' -f 1)
	
	git fetch "$origin"
	git reset --hard "$rev"
	git push
}

# delete all branches that don't exist at the remote repo
gitcleanbranches() {
	git fetch -p && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
}

case ${1} in
clone|c) ghclone ${@:2} ;;
init|i) gitinit ${@:2} ;;
push|p) gitpush "${@:2}" ;;
refresh) gitrefresh ${@:2} ;;
append|a) gitappend ${@:2} ;;
reset|r) gitreset ${@:2} ;;
clean) gitcleanbranches ${@:2} ;;
esac
