#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

mode="normal"

# Mod1 for Alt, Mod4 for Super/Win key
modkey="Super"

# Program keybindings
riverctl map $mode $mod Return spawn foot
riverctl map $mode $mod O spawn firefox
riverctl map $mode $mod S spawn grim
riverctl map $mode $mod A spawn ~/.config/scripts/grimarea
riverctl map $mode $mod C spawn ~/.config/scripts/colorpicker

# close the focused view
riverctl map $mode $mod Q close

# show power menu
riverctl map $mode $mod+Shift E spawn ~/.config/fuzzel/powermenu.sh

# show application menu
riverctl map $mode $mod D spawn ~/.config/fuzzel/launcher.sh

# focus the next/previous view in the layout stack
riverctl map $mode $mod Right focus-view next
riverctl map $mode $mod Left focus-view previous

# swap the focused view with the next/previous view in the layout stack
riverctl map $mode $mod+Shift J swap next
riverctl map $mode $mod+Shift K swap previous

# focus the next/previous output
riverctl map $mode $mod Period focus-output next
riverctl map $mode $mod Comma focus-output previous

# send the focused view to the next/previous output
riverctl map $mode $mod+Shift Period send-to-output next
riverctl map $mode $mod+Shift Comma send-to-output previous

# bump the focused view to the top of the layout stack
riverctl map $mode $mod+Shift Return zoom

# decrease/increase the main ratio of rivertile(1)
riverctl map $mode $mod+Shift Left send-layout-cmd rivertile "main-ratio -0.05"
riverctl map $mode $mod+Shift Right send-layout-cmd rivertile "main-ratio +0.05"

# move views
riverctl map-pointer $mode $mod BTN_LEFT move-view

# resize views
riverctl map-pointer $mode $mod BTN_RIGHT resize-view

# toggle float
riverctl map-pointer $mode $mod BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # $mod+[1-9] to focus tag [0-8]
    riverctl map $mode $mod $i set-focused-tags $tags

    # $mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map $mode $mod+Shift $i set-view-tags $tags

    # $mod+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map $mode $mod+Control $i toggle-focused-tags $tags

    # $mod+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map $mode $mod+Shift+Control $i toggle-view-tags $tags
done

# $mod+0 to focus all tags
# $mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map $mode $mod 0 set-focused-tags $all_tags
riverctl map $mode $mod+Shift 0 set-view-tags $all_tags

# toggle float
riverctl map $mode $mod Space toggle-float

# toggle fullscreen
riverctl map $mode $mod F toggle-fullscreen

# change layout orientation
riverctl map $mode $mod+Alt Up    send-layout-cmd rivertile "main-location top"
riverctl map $mode $mod+Alt Right send-layout-cmd rivertile "main-location right"
riverctl map $mode $mod+Alt Down  send-layout-cmd rivertile "main-location bottom"
riverctl map $mode $mod+Alt Left  send-layout-cmd rivertile "main-location left"

# Set style and cursor settings
riverctl background-color 0x242424
riverctl border-color-focused 0xffc0cb
riverctl border-color-unfocused 0x2e3440
riverctl xcursor-theme Qogir-dark 12

# Set keyboard repeat rate
riverctl set-repeat 30 200

# Make all views with an app-id that starts with "float" start floating.
riverctl rule-add float -app-id 'float*'

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add csd -app-id "bar"

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit
riverctl default-layout rivertile
riverctl keyboard-layout de
rivertile -view-padding 6 -outer-padding 4 &
riverctl focus-follows-cursor $mode

# Set a random wallpaper
exec ~/.config/scripts/wallpaper &

# Status bar
exec waybar &

# Audio
exec pipewire &
exec pipewire-pulse &
exec wireplumber &

# Bluetooth
exec blueman-applet &

# Notifications
exec mako &

# Output configuration
exec kanshi &

# Nextcloud
exec nextcloud --background &

# Avizo service for brightness and volume
exec "avizo-service" &

# Input configuration
TOUCHPAD="$(riverctl list-inputs | grep Touchpad)"
riverctl input "$TOUCHPAD" events enabled
riverctl input "$TOUCHPAD" tap enabled
riverctl input "$TOUCHPAD" natural-scroll enabled
riverctl input "$TOUCHPAD" tap-button-map left-right-middle

# Brightness and volume keys via Avizo
riverctl map $mode None XF86AudioRaiseVolume spawn "volumectl -u up"
riverctl map $mode None XF86AudioLowerVolume spawn "volumectl -u down"
riverctl map $mode None XF86AudioMute spawn "volumectl toggle-mute"
riverctl map $mode None XF86AudioMicMute spawn "volumectl -m toggle-mute"
riverctl map $mode None XF86MonBrightnessUp spawn "lightctl up"
riverctl map $mode None XF86MonBrightnessDown spawn "lightctl down"
